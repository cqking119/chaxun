<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    ">

    <context:property-placeholder location="classpath:conf/db/database.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url">
            <value>jdbc:oracle:thin:@127.0.0.1:cwgsdb</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="filters">
            <value>stat,log4j</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.maxActive}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.initialSize}</value>
        </property>
        <property name="maxWait">
            <value>${jdbc.maxWait}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${jdbc.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${jdbc.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${jdbc.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${jdbc.testOnReturn}</value>
        </property>
        <!-- Oracle下建议开启，MySQL下建议关闭 -->
        <property name="poolPreparedStatements">
            <value>false</value>
        </property>
    </bean>

    <!-- MyBatis integrated with Spring -->
   <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:sqlmapconfig.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>-->

    <!-- transaction management configuration, single data source transaction -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- use annotation to define transactions -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>